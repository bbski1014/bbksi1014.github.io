<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>极限</title>
    <link href="/2022/04/14/test/"/>
    <url>/2022/04/14/test/</url>
    
    <content type="html"><![CDATA[<h1>极限</h1><h1>数列极限（基础）</h1><h2 id="极限定义的理解"><a class="header-anchor" href="#极限定义的理解">¶</a>极限定义的理解</h2><p>极限的数学定义应该是精确地 可定义的</p><p>e–&gt;N不是函数关系;</p><p>我们研究的是无穷序列，数列有极限就是在一定的e精确度下，存在N,让n&gt;N的无限多项存在于极限a的邻域内（<strong>在无穷的层面中也就是数列的基本全部项在邻域内</strong>，也就是趋近于某个值）;</p><p>换个说法，数列有有限项在领域外，意味着存在N让n&gt;N时，数列全部位于邻域内;</p><p>注意，一定是n&gt;N时，数列所有的项在邻域，这样才是保证了无穷数列基本完全处于邻域内;<strong>而数列有无穷多项处于邻域内数列就有极限的说法是错误的</strong>，应该是<strong>足够后面的所有的项</strong>都处在某个邻域内，无穷多项有可能只是后面所有项的一部分项。</p><h2 id="极限证明的基本思路"><a class="header-anchor" href="#极限证明的基本思路">¶</a>极限证明的基本思路</h2><p>从极限存在的假设出发，以极限的定义为基础，观察数列解析式的性质，在数值或者变化范围的观点上(放缩的思路)，构造e从而证明N的存在性，进而便证明了极限的存在。</p><h2 id="极限的静态定义和动态定义"><a class="header-anchor" href="#极限的静态定义和动态定义">¶</a>极限的静态定义和动态定义</h2><p>静态定义：</p><p><img src="https://pic3.zhimg.com/80/v2-f21285f2f94f0d62ea0325ae53a05d7a_720w.jpg" alt="img"></p><p>动态定义：</p><p>![img](\images\image.png)</p><p>我们所学的极限定义是从e的静态层面(给定精确度)之后进行分析，这种定义可以让我们以（e，N）能够定量对数列极限的存在进行精确分析。</p><h2 id="收敛数列的性质"><a class="header-anchor" href="#收敛数列的性质">¶</a>收敛数列的性质</h2><ul><li>唯一性（收敛数列极限唯一）</li><li>有界性（收敛必定有界，有界不一定收敛）</li><li>保号性（极限数列可以反映数列的符号，数列的符号也可以反映极限的符号）</li></ul><p>数列收敛等价于数列存在极限</p><p>数列的保号性的强结论推导</p><h2 id="收敛数列和其子列的关系"><a class="header-anchor" href="#收敛数列和其子列的关系">¶</a>收敛数列和其子列的关系</h2><p>原数列数列收敛，则其任意子列也收敛，且极限相同;</p><p>存在子列发散，则其原数列也发散</p><p>（可用于判别数列发散）</p><h1>函数的极限（数列极限在函数中推广）</h1><p>函数中的无穷符号要注明正负，数列本身已经将无穷定义为正</p><p>从离散到连续</p><p>三角不等式</p><h2 id="函数极限和数列极限的定义的异同"><a class="header-anchor" href="#函数极限和数列极限的定义的异同">¶</a>函数极限和数列极限的定义的异同</h2><p>函数的有界性和保号性是局部的<br>$$<br>\mathring{U}(1,2)<br>$$</p><h2 id="复合函数的极限运算法则理解"><a class="header-anchor" href="#复合函数的极限运算法则理解">¶</a>复合函数的极限运算法则理解</h2><p>![image-20210922085858832](C:\Users\L\OneDrive\桌面\开学文件\Typora Note\极限.assets\image-20210922085858832.png)</p><p>![image-20210922090838949](C:\Users\L\OneDrive\桌面\开学文件\Typora Note\极限.assets\image-20210922090838949.png)</p><p>对法则约束条件<br>$$<br>x\in\mathring{U}({x_0},{\epsilon_0}),g(x)≠u_0<br>$$<br>的解释:</p><p>​从极限的定义上来看，对于内函数<br>$$<br>u=g(x)<br>$$</p><p>​来说，若<br>$$<br>x\rightarrow{x_0},limg(x)=u_0<br>$$<br>​那么<br>$$<br>x\in\mathring{U}({x_0},{\epsilon_0})，u≠g(x)<br>$$<br>​<strong>这样才符合极限存在的定义</strong></p><p>详细来说，便是：<strong>不能忽略中间变量u=g(x)的变化</strong><br>$$<br>\begin{align}<br>&amp;对于复合函数的极限运算法则:<br>\&amp; \lim_{x\rightarrow{x_0}}f[g(x_0)]=\lim_{x\rightarrow{u_0}}f(u)=A<br>\&amp;该法则让我们可以可以通过换元的方式求取复合函数的极限，而该法则是有约束条件的(详情见书)，<br>\&amp;该约束条件意味着要想应用这条法则，复合函数应满足x\rightarrow{x_0}时，u=g(x)\rightarrow{u_0}(这包含着<br>\&amp;逼近但不等于u_0的意思)当x\rightarrow{x_0}时，或者说x\in\mathring{U}({x_0},{\epsilon_0})时，内函数u=g(x)的取值&amp;变化可能是:<br>\<br>&amp;1,\lim_{x\rightarrow{x_0}}\<br>&amp;2,存在x=x_0使得f(x)=u_0或f(x)恒等于某个值u_0<br>\&amp;u的变化会因为x的控制而发生改变，变得无法逼近目标u_0,因此我们需要观察x的变化取判断u的变化，<br>\&amp;再去判断f(u)的u受到x控制后是否还能向u_0逼近，若符合第一种情况则该法则可用，<br>\&amp;若符合第二种情况则该法则不适用<br>\&amp;因为u\rightarrow{u_0}时，外函数的极限与u_0的取值无关，存在\lim_{u\rightarrow{u_0}}f(u)≠f(u_0)或f(u_0)不存在的情况,<br>\&amp;忽视约束条件运用该法则有可能取到的是f(u_0)的值,而不是当x\rightarrow{x_0}时,f(g(x))的极限值，<br>\&amp;因为我们忽视了中间变量u的变化情况，u有可能并不是随着x的逼近,逼近于u_0,而是会恒等于u_0或者u=f(x)<br>\&amp;甚至u=g(x)不存在极限,这时我们会取不到f(u)的极限值;<br>\&amp;我们并不是单纯得代入某个值给u，而是要观察u随着x的逼近<br>\&amp;得到u的变化情况，如果u逼近于某个值，则f(u)便有机会取到某个极限值，但不一定是f(u)<br>\end{align}<br>$$</p><h2 id="极限求值的技巧"><a class="header-anchor" href="#极限求值的技巧">¶</a>极限求值的技巧</h2><p>做之前先观察极限 最好能得出极限的大概值</p><ul><li><p>分子或分母的有理化</p><p><strong>常用公式:</strong><br>$$<br>\begin{align}<br>x<sup>{n}-1&amp;=(x-1)(x</sup>{n-1}+x^{n-2}+\dots+x+1)\<br>x&amp;=(\sqrt[n]{x+1})<sup>{n}-1=(\sqrt[n]{x+1}-1)((\sqrt[n]{x+1})</sup>{n-1}-(\sqrt[n]{x+1})^{n-2}+\dots+(\sqrt[n]{x+1})+1)<br>\end{align}<br>$$<br><strong>同时,n次方的差公式为</strong><br>$$<br>\begin{align}<br>a<sup>2-b</sup>2&amp;=(a-b)(a+b)\<br>a<sup>3-b</sup>3&amp;=(a-b)(a<sup>2+ab+b</sup>2)\<br>a<sup>{n}-b</sup>{n}&amp;=(a-b)(a<sup>{n-1}+a</sup>{n-2}b+a<sup>{n-3}n</sup>{n-2}+\dots+a<sup>{2}b</sup>{n-3}+ab<sup>{n-2}+b</sup>{n-1})<br>\end{align}<br>$$</p></li><li><p>取分式</p></li><li><p>换元</p></li><li><p>无穷小和无穷大乘以有界函数的定理</p></li></ul><p><strong>注意</strong>：<strong>无穷小x有界函数依旧是无穷小</strong></p><p>​<strong>无穷大x有界函数不一定是无穷大</strong></p><p>如：<br>$$<br>x\sin{\frac{1}{x}}<br>$$<br>运用夹逼准则证明极限的存在的话 要根据我们对极限的猜测 去构造两条逼近边界</p><p><strong>极限求值不等式：</strong><br>$$<br>[x]&gt;x+1<br>\<br>绝对值不等式：<br>\<br>||a|-|b||&lt;=|a±b|&lt;=|a|+|b|<br>$$</p><h1>无穷小的比较</h1><p>无穷小的阶数k是用来描述无穷小趋近于0的变化快慢 要<strong>大于0</strong><br>$$<br>\alpha(x)^k<br>$$<br><strong>无穷小替换法则只能替换因式，加减式不能替换</strong></p><p><strong>从泰勒展开公式</strong><br>$$<br>f(x)=f(x_0)+\frac{f<sup>{(1)}(x_0)}{1!}+\frac{f</sup>{(2)}(x_0)}{2!}+\dots+\frac{f^{(n)}(x_0)}{n!}+R_n(x)\<br>佩亚诺余项：R_n(x)=o[(x-x_0)^n]\<br>拉格朗日余项：R_n(x)=f<sup>{n+1}[x_0+\theta(x-x_0)]\frac{(x-x_0)</sup>{n+1}}{(n+1)!}<br>$$<br><strong>我们可以得知，我们替换等价无穷小时（一般替换成x^n），</strong></p><p><strong>其实是取 被替换的f(x) 的粗略展开，也就是f(x)泰勒展开的第一项往后的一部分项</strong></p><p><img src="https://pic4.zhimg.com/v2-8d85d36c6b00dd2c97e9921c88e0398b_r.jpg" alt="preview"></p><p><strong>当我们用加减时，有可能将一部分更高阶的无穷小给忽略掉，导致结果出错</strong></p><p><strong>但有时候加减也可以，在比较无穷小的阶数时，只要更低阶的无穷小没有因为加减而消去，则可以对加减式进行无穷小的替换；但是计算极限时会不能替换</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2022/04/13/learning/"/>
    <url>/2022/04/13/learning/</url>
    
    <content type="html"><![CDATA[<h2 id="crashed-out"><a class="header-anchor" href="#crashed-out">¶</a>crashed out</h2>]]></content>
    
    
    <categories>
      
      <category>learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/04/13/hello-world/"/>
    <url>/2022/04/13/hello-world/</url>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a class="header-anchor" href="#Quick-Start">¶</a>Quick Start</h2><h3 id="Create-a-new-post"><a class="header-anchor" href="#Create-a-new-post">¶</a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a class="header-anchor" href="#Run-server">¶</a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo server<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a class="header-anchor" href="#Generate-static-files">¶</a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo generate<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a class="header-anchor" href="#Deploy-to-remote-sites">¶</a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
